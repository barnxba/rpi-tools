#
# This playbook sets up basic RPi
# functionality:
#
# 1. Update APT cache
# 2. Upgrade software with dist-upgrade
# 3. Install basic requirements
# 4. Install basic software
# 5. Install Docker from official Docker repos
# 6. Install vimrc
#
---
- name: "Setup basic post-install tools"
  hosts: all
  gather_facts: yes
  vars:
    - user: pi
    - basic_pkgs:
        - apt-transport-https
        - ca-certificates
        - gnupg
        - python3-setuptools
        - python3-pip
        - virtualenv
        - software-properties-common
    - software_pkgs: [ 'wget', 'curl', 'git', 'vim', 'tmux', 'nmap' ]
    - vimrc: "{{ ansible_env.HOME }}/.vimrc"
  become: no

  tasks:
  - name: Refresh APT cache
    become: yes
    ansible.builtin.apt:
      update_cache: yes
      cache_valid_time: 86400  # one day

  - name: Run dist-upgrade
    become: yes
    ansible.builtin.apt:
      upgrade: dist

  - name: Install basic required packages
    become: yes
    ansible.builtin.apt:
      name: "{{ basic_pkgs }}"
      state: latest

  - name: Install basic software -> curl, git, vim, tmux, etc.
    become: yes
    ansible.builtin.apt:
      name: "{{ software_pkgs }}"
      state: latest

  - name: Install Docker
    become: yes
    vars:
      - dist: "{{ ansible_distribution | lower }}"
      - release: "{{ ansible_distribution_release }}"
      - arch: armhf
      - keyring_dir: /etc/apt/keyrings
      - keyring_file: docker.gpg
      - keyring_path: "{{ keyring_dir }}/{{ keyring_file }}"
    block:
      - name: Check if {{ keyring_dir }} exists
        ansible.builtin.file:
          path: "{{ keyring_dir }}"
          state: directory

      - name: Check if {{ keyring_path }} exists
        ansible.builtin.stat:
          path: "{{ keyring_path }}"
        register: gpg_key_exists

      - name: Download Docker GPG key
        ansible.builtin.shell: >
          curl -fsSL https://download.docker.com/linux/{{ dist }}/gpg |
          gpg --dearmor -o {{ keyring_path }}
        when: not gpg_key_exists.stat.exists

      - name: Add Docker repository
        ansible.builtin.apt_repository:
          repo: >
            deb [arch={{ arch }} signed-by={{ keyring_path }}]
            https://download.docker.com/linux/{{ dist }} {{ release }} stable
          filename: docker

      - name: Install docker-ce and docker-compose-plugin
        ansible.builtin.apt:
          name: [ 'docker-ce', 'docker-compose-plugin' ]
          state: latest

      - name: Check for docker group
        ansible.builtin.group:
            name: docker
            state: present

      - name: Add {{ user }} user to docker group
        ansible.builtin.user:
          name: "{{ user }}"
          groups: docker
          append: yes

  - name: Install .vimrc
    copy:
      src: vimrc
      dest: "{{ vimrc }}"
      backup: yes
      mode: 0640
